package controllers

import (
	"github.com/DanielRenne/goCoreAppTemplate/sessionFunctions"
	"github.com/DanielRenne/goCoreAppTemplate/viewModel"
	"github.com/DanielRenne/GoCore/core/utils"
)

func vm-CAPCAMEL-AddEditGetCommon(context session_functions.RequestContext, respond session_functions.ServerResponse, vm *viewModel.-CAPCAMEL-ModifyViewModel) bool {
    // Use this method as a common way to load up any VM defaults that both the add and edit pages need!

	//companies, err := queries.Companies.ByAccountWithContext(context)

	//if err != nil {
	//	respond(PARAM_REDIRECT_NONE, constants.ERRORS_ACCOUNT_NOT_FOUND, PARAM_SNACKBAR_TYPE_ERROR, err, PARAM_TRANSACTION_ID_NONE, vm)
	//	return false
	//}

	return true
}

func -CAPCAMEL-PostCommitHook(actionPerformed string, context session_functions.RequestContext, id string) (ret bool) {
	if utils.InArray(actionPerformed, utils.Array("Create-CAPCAMEL-", "Copy-CAPCAMEL-", "Update-CAPCAMEL-")) && id != "" {
			//var row model.-CAPCAMEL-
			//err := model.-CAPCAMELPLURAL-.Query().ById(id, &row)
			//t, err := session_functions.StartTransaction(context())
			//if err == nil {
				// // -- Add custom business rules to clean up data based on relationships or changes here

				//if row.Joins.Buildings.Count > 1 {
				//	row.IsCampus = true
				//} else {
				//	row.IsCampus = false
				//}

				//err = row.SaveWithTran(t)
				//if err == nil {
				//	err = t.Commit()
				//	if err == nil {
				//		return true
				//	}
				//}
			//} else {
			//	core.Debug.Dump("Desc->Error in LocationEntityPostSaveHook", err)
			//}
			//return false

		// Comment the above if you wish to do something after something was created
		return true
	} else {
		return true
	}
}