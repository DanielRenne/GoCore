#!/bin/bash
cd $GOPATH
RED='\033[0;31m'
NC='\033[0m' # No Color
GREEN="\[$(tput setaf 2)\]"

say "Go Core App compiling"  > /dev/null 2>&1
port=$(bash $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/bin/get_port_local)
for ((i=1;i<=45;i++));
do
   grep "goCoreAppTemplate Started" $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/log/app.log  > /dev/null 2>&1
   ret=$?
   grep "Bootstraping of Users" $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/log/app.log  > /dev/null 2>&1
   ret2=$?
   grep "address already in use" $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/log/app.log | grep $port  > /dev/null 2>&1
   ret3=$?

   if [[ "$ret3" -eq 0 ]]; then
       i=1000
       #break out
       set +e
       say "Server is already running on port $port.  Killing all ports and trying again"
       whoami=$(whoami)
       if [[ "$whoami" == "root" ]] || [[ "$port" != "80" ]]; then
         kill $(lsof -t -i:$port)
       else
         sudo kill $(sudo lsof -t -i:$port)
       fi
       set -e

       bash $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/bin/start_golang
       exit 1
   fi

   if [[ "$ret" -eq 0 ]] || [[ "$ret2" -eq 0 ]]; then
     echo -e "${GREEN}>>>>>>>>>>>>>>>>>>GOLANG IS FULLY MOUNTED<<<<<<<<<<<<<<<<<<${NC} "
     set +e
     say "server compiled at localhost port $port"  > /dev/null 2>&1
     set -e
     i=100000
   else
     grep "# github.com/" $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/log/app.log  > /dev/null 2>&1
     ret=$?
     grep ": expected" $GOPATH/src/github.com/DanielRenne/goCoreAppTemplate/log/app.log  > /dev/null 2>&1
     ret2=$?
     echo -e "Golang compiling: (${RED}${i}${NC}) seconds"

     if [[ "$ret" -eq 0 ]]; then
       i=34
       #break out
       set +e
       say "You broke the build.  Go fix it" > /dev/null 2>&1
       set -e
     fi

     if [[ "$ret2" -eq 0 ]]; then
       i=1000
       #break out
       set +e
       say "You broke the build.  Go fix it"
       set -e
     fi
   fi
   sleep 1
done

if [[ "$i" -eq "46" ]]; then
  say "Check golang logs.  Probably failed or timed out or is slowly compiling"

fi
